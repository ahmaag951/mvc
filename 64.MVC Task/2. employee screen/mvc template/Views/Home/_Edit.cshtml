@model DataAccess.Emp


@*<script src="~/Scripts/jquery-1.8.2.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>*@
<script src="~/scripts/jquery-3.2.0.min.js"></script>
<script src="~/scripts/jquery.unobtrusive-ajax.js"></script>
<script>
    $(function () {
        $("#uploadImage").bind('change', function () {
            if (this.files && this.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#image').attr('src', e.target.result);
                };
                reader.readAsDataURL(this.files[0]);
            }
        });
    });
</script>

@using (Ajax.BeginForm("Edit", new AjaxOptions
    {
        InsertionMode = InsertionMode.Replace,
        UpdateTargetId = "index",
        OnSuccess = "clearUpdate"
    }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset id="editFieldSet">
        <legend>Employee</legend>

        @Html.HiddenFor(model => model.Id)

        <div class="editor-label">
            @Html.LabelFor(model => model.FirstName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FirstName)
            @Html.ValidationMessageFor(model => model.FirstName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LastName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LastName)
            @Html.ValidationMessageFor(model => model.LastName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Salary)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Salary)
            @Html.ValidationMessageFor(model => model.Salary)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Image)
        </div>
        <div class="editor-field">
            @*@Html.EditorFor(model => model.Image)*@
            @*@Html.ValidationMessageFor(model => model.Image)*@
            
            
            @*@{
                if (!string.IsNullOrEmpty(Model.Image))
                {
                    var imageUrl = "/Images/" + Model.Image;
                    @: <img id="image" alt="Photo" src="@imageUrl"/>
                    
                }
    
            }
            
            <input type="file" id="uploadImage" accept="image/*" name="Image"/>*@
            
            @Html.ActionLink("Change Image", "ChangeImage")
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ManagerName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ManagerName)
            @Html.ValidationMessageFor(model => model.ManagerName)
        </div>
        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}